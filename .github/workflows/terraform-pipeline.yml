name: Implement Build Steps in GitHub Actions Workflow for Terraform Plan and Apply
on:
  push:
    branches:
      - main
      - feature*
  pull_request:
    types:
      - opened
      - synchronize

env:
  AWS_REGION: eu-west-1
  AWS_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

jobs:
  tfsec:
    name: tfsec
    runs-on: self-hosted

    steps:
     - name: Clone repo
       uses: actions/checkout@v2

     - name: tfsec
       uses: aquasecurity/tfsec-pr-commenter-action@v1.2.0

    #  - name: Run tfsec (high/critical)
    #    run: tfsec --severity HIGH --severity CRITICAL || true

    #  - name: Run tfsec (medium/low)
    #    run: tfsec --severity MEDIUM --severity LOW || true

  Build-Infra:
    name: Terraform CICD
    runs-on: self-hosted
    needs: tfsec
    permissions:
      contents: read
      issues: write
    steps:
     - name: Verify Docker Group
       run: |
         sudo usermod -aG docker $USER
         newgrp docker
         sudo chmod 666 /var/run/docker.sock

     - name: Set up Docker Buildx
       uses: docker/setup-buildx-action@v2

     - name: Checkout
       uses: actions/checkout@v2

     - name: Set up Terraform
       uses: hashicorp/setup-terraform@v2

# This Step moves the AWS credentials to the Github Environment So Terraform Can Automatically Identify the Provider is AWS
     - name: Set AWS Credentials
       run: |
        echo "AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}" >> $GITHUB_ENV
        echo "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> $GITHUB_ENV

     - name: Terraform Init
       id: init
       run: terraform init
       working-directory: ./TerraformScripts

# This Step is only executed if the name of the Branch is either Main or starts with feature
     - name: Terraform Plan
       id: plan
       if: github.ref_name == 'main' || startsWith(github.ref_name, 'feature/')
       run: terraform plan -out saved_plan
       working-directory: ./TerraformScripts

# This Step Requires Approval from owner or maintainer whom has the required Github token to proceed further
     - name: Manual Approval
       if: github.ref_name == 'main' && (github.event_name == 'push' || github.event_name == 'pull_request')
       uses: trstringer/manual-approval@v1
       with:
         approvers: 'Mitchxxx'
         secret: ${{ secrets.GITHUB_TOKEN }}
         minimum-approvals: 1
         issue-title: "Manual approval required for workflow run"
         issue-body: |
           Workflow is pending manual review.
           URL: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
           Required approvers: [Mitchxxx]
           Respond "approved", "approve", "lgtm", "yes" to continue workflow or "denied", "deny", "no" to cancel.

     - name: Terraform Apply
       id: apply
       if: github.ref_name == 'main' && (github.event_name == 'push' || steps.plan.outputs.approved == 'true')
       run: terraform apply --auto-approve saved_plan
       working-directory: ./TerraformScripts
